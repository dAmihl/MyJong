[gd_scene load_steps=1 format=2]

[ext_resource id=1 path="Front.png" type="Texture"]

[ext_resource id=2 path="Back.png" type="Texture"]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)
shader_param/texture_0 = ExtResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)
shader_param/texture_0 = ExtResource(2)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-2.28033, -0.163856, 1.0, -2.42612, -0.216906, 1.0009, -2.36629, -0.216906, 1.05437, -2.36591, -0.163856, -0.912561, -2.42452, -0.216906, -1.01903, -2.45649, -0.216906, -0.961556, 1.0, -0.163856, 0.893792, 1.04889, -0.216906, 1.00179, 1.09133, -0.216906, 0.942423, 0.891279, -0.163856, -1.0, 1.03627, -0.216906, -1.01424, 0.976735, -0.216906, -1.05372, -2.28033, -0.163856, -1.0, -2.36591, -0.163856, -0.912561, -2.28033, -0.103075, -0.912561, -2.28033, -0.103075, 0.893792, -2.33713, -0.163856, 0.964695, -2.28033, -0.163856, 1.0, 1.0, -0.163856, -0.912561, 1.09133, -0.216906, 0.942423, 1.09133, -0.216906, -0.961556, -2.33713, -0.163856, 0.964695, -2.45649, -0.216906, 0.942423, -2.42612, -0.216906, 1.0009, 0.947759, -0.163856, -0.962546, 1.09133, -0.216906, -0.961556, 1.03627, -0.216906, -1.01424, -2.28033, -0.103075, -0.912561, -2.36591, -0.163856, 0.893792, -2.28033, -0.103075, 0.893792, -2.36591, -0.163856, 0.893792, -2.45649, -0.216906, -0.961556, -2.45649, -0.216906, 0.942423, 1.0, -0.163856, -0.912561, 0.891279, -0.103075, 0.893792, 1.0, -0.163856, 0.893792, 1.0, -0.163856, 0.893792, 0.891279, -0.163856, 1.0, 0.956889, -0.163856, 0.942383, 0.947759, -0.163856, -0.962546, 0.891279, -0.103075, -0.912561, 1.0, -0.163856, -0.912561, -2.28033, -0.163856, -1.0, 0.976735, -0.216906, -1.05372, -2.36629, -0.216906, -1.05372, 0.956889, -0.163856, 0.942383, 0.976735, -0.216906, 1.05437, 1.04889, -0.216906, 1.00179, -2.33694, -0.163856, -0.964025, -2.36629, -0.216906, -1.05372, -2.42452, -0.216906, -1.01903, 0.891279, -0.103075, -0.912561, -2.28033, -0.103075, 0.893792, 0.891279, -0.103075, 0.893792, 0.891279, -0.103075, 0.893792, -2.28033, -0.163856, 1.0, 0.891279, -0.163856, 1.0, 0.891279, -0.163856, -1.0, -2.28033, -0.103075, -0.912561, 0.891279, -0.103075, -0.912561, 0.891279, -0.163856, 1.0, -2.36629, -0.216906, 1.05437, 0.976735, -0.216906, 1.05437, -2.28033, -0.163856, 1.0, -2.33713, -0.163856, 0.964695, -2.42612, -0.216906, 1.0009, -2.36591, -0.163856, -0.912561, -2.33694, -0.163856, -0.964025, -2.42452, -0.216906, -1.01903, 1.0, -0.163856, 0.893792, 0.956889, -0.163856, 0.942383, 1.04889, -0.216906, 1.00179, 0.891279, -0.163856, -1.0, 0.947759, -0.163856, -0.962546, 1.03627, -0.216906, -1.01424, -2.28033, -0.163856, -1.0, -2.33694, -0.163856, -0.964025, -2.36591, -0.163856, -0.912561, -2.28033, -0.103075, 0.893792, -2.36591, -0.163856, 0.893792, -2.33713, -0.163856, 0.964695, 1.0, -0.163856, -0.912561, 1.0, -0.163856, 0.893792, 1.09133, -0.216906, 0.942423, -2.33713, -0.163856, 0.964695, -2.36591, -0.163856, 0.893792, -2.45649, -0.216906, 0.942423, 0.947759, -0.163856, -0.962546, 1.0, -0.163856, -0.912561, 1.09133, -0.216906, -0.961556, -2.28033, -0.103075, -0.912561, -2.36591, -0.163856, -0.912561, -2.36591, -0.163856, 0.893792, -2.36591, -0.163856, 0.893792, -2.36591, -0.163856, -0.912561, -2.45649, -0.216906, -0.961556, 1.0, -0.163856, -0.912561, 0.891279, -0.103075, -0.912561, 0.891279, -0.103075, 0.893792, 1.0, -0.163856, 0.893792, 0.891279, -0.103075, 0.893792, 0.891279, -0.163856, 1.0, 0.947759, -0.163856, -0.962546, 0.891279, -0.163856, -1.0, 0.891279, -0.103075, -0.912561, -2.28033, -0.163856, -1.0, 0.891279, -0.163856, -1.0, 0.976735, -0.216906, -1.05372, 0.956889, -0.163856, 0.942383, 0.891279, -0.163856, 1.0, 0.976735, -0.216906, 1.05437, -2.33694, -0.163856, -0.964025, -2.28033, -0.163856, -1.0, -2.36629, -0.216906, -1.05372, -2.28033, -0.103075, -0.912561, 0.891279, -0.103075, 0.893792, -2.28033, -0.103075, 0.893792, -2.28033, -0.163856, 1.0, -2.28033, -0.163856, -1.0, 0.891279, -0.163856, 1.0, -2.28033, -0.163856, 1.0, -2.36629, -0.216906, 1.05437),
		Vector3Array(-0.317691, 0.879045, 0.355461, -0.317691, 0.879045, 0.355461, -0.317691, 0.879045, 0.355461, -0.40023, 0.888964, -0.222618, -0.40023, 0.888964, -0.222618, -0.40023, 0.888964, -0.222618, 0.373693, 0.888247, 0.267153, 0.373693, 0.888247, 0.267153, 0.373693, 0.888247, 0.267153, 0.276075, 0.866292, -0.416317, 0.276075, 0.866292, -0.416317, 0.276075, 0.866292, -0.416317, -0.503799, 0.709291, -0.493045, -0.503799, 0.709291, -0.493045, -0.503799, 0.709291, -0.493045, -0.295026, 0.829293, 0.474588, -0.295026, 0.829293, 0.474588, -0.295026, 0.829293, 0.474588, 0.50227, 0.864711, 0.0, 0.50227, 0.864711, 0.0, 0.50227, 0.864711, 0.0, -0.430399, 0.874525, 0.223525, -0.430399, 0.874525, 0.223525, -0.430399, 0.874525, 0.223525, 0.327711, 0.88051, -0.342503, 0.327711, 0.88051, -0.342503, 0.327711, 0.88051, -0.342503, -0.579076, 0.815274, 0.0, -0.579076, 0.815274, 0.0, -0.579076, 0.815274, 0.0, -0.505378, 0.862898, 0.0, -0.505378, 0.862898, 0.0, -0.505378, 0.862898, 0.0, 0.487973, 0.872859, 0.0, 0.487973, 0.872859, 0.0, 0.487973, 0.872859, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.434703, 0.777575, -0.454324, 0.434703, 0.777575, -0.454324, 0.434703, 0.777575, -0.454324, 0.0, 0.711528, -0.702658, 0.0, 0.711528, -0.702658, 0.0, 0.711528, -0.702658, 0.271348, 0.887537, 0.372355, 0.271348, 0.887537, 0.372355, 0.271348, 0.887537, 0.372355, -0.255515, 0.866473, -0.428879, -0.255515, 0.866473, -0.428879, -0.255515, 0.866473, -0.428879, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.867925, 0.496696, 0.0, 0.867925, 0.496696, 0.0, 0.867925, 0.496696, 0.0, 0.821109, -0.570772, 0.0, 0.821109, -0.570772, 0.0, 0.821109, -0.570772, 0.0, 0.715742, 0.698364, 0.0, 0.715742, 0.698364, 0.0, 0.715742, 0.698364, -0.297611, 0.825969, 0.478751, -0.297611, 0.825969, 0.478751, -0.297611, 0.825969, 0.478751, -0.398126, 0.889545, -0.224065, -0.398126, 0.889545, -0.224065, -0.398126, 0.889545, -0.224065, 0.329195, 0.897957, 0.292066, 0.329195, 0.897957, 0.292066, 0.329195, 0.897957, 0.292066, 0.276075, 0.866291, -0.416319, 0.276075, 0.866291, -0.416319, 0.276075, 0.866291, -0.416319, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -0.563713, 0.793644, 0.228816, -0.563713, 0.793644, 0.228816, -0.563713, 0.793644, 0.228816, 0.502269, 0.864711, 0.0, 0.502269, 0.864711, 0.0, 0.502269, 0.864711, 0.0, -0.426823, 0.887585, 0.173248, -0.426823, 0.887585, 0.173248, -0.426823, 0.887585, 0.173248, 0.327712, 0.880509, -0.342503, 0.327712, 0.880509, -0.342503, 0.327712, 0.880509, -0.342503, -0.579076, 0.815274, 0.0, -0.579076, 0.815274, 0.0, -0.579076, 0.815274, 0.0, -0.505378, 0.862898, 0.0, -0.505378, 0.862898, 0.0, -0.505378, 0.862898, 0.0, 0.487973, 0.872859, 0.0, 0.487973, 0.872859, 0.0, 0.487973, 0.872859, 0.0, 0.43654, 0.780858, 0.44687, 0.43654, 0.780858, 0.44687, 0.43654, 0.780858, 0.44687, 0.35399, 0.767941, -0.533814, 0.35399, 0.767941, -0.533814, 0.35399, 0.767941, -0.533814, 0.0, 0.711531, -0.702654, 0.0, 0.711531, -0.702654, 0.0, 0.711531, -0.702654, 0.316014, 0.877861, 0.359855, 0.316014, 0.877861, 0.359855, 0.316014, 0.877861, 0.359855, -0.269154, 0.864976, -0.423523, -0.269154, 0.864976, -0.423523, -0.269154, 0.864976, -0.423523, 0.0, 1.0, 0.0, 0.0, 0.867924, 0.496696, 0.0, 0.867924, 0.496696, 0.0, 0.867924, 0.496696, 0.0, 0.821109, -0.570772, 0.0, 0.715743, 0.698363, 0.0, 0.715743, 0.698363, 0.0, 0.715743, 0.698363),
		FloatArray(0.82163, 0.0680912, 0.565939, 1.0, 0.82163, 0.0680912, 0.565939, 1.0, 0.82163, 0.0680912, 0.565939, 1.0, -0.582557, -0.0592795, 0.810626, 1.0, -0.582556, -0.0592795, 0.810626, 1.0, -0.582556, -0.0592795, 0.810626, 1.0, -0.660137, 0.0523564, 0.749318, 1.0, -0.660137, 0.0523564, 0.749318, 1.0, -0.660137, 0.0523564, 0.749318, 1.0, 0.893205, -0.0712953, 0.443962, 1.0, 0.893205, -0.0712953, 0.443962, 1.0, 0.893205, -0.0712953, 0.443962, 1.0, -0.0937857, 0.522485, 0.847475, 1.0, -0.0937857, 0.522485, 0.847475, 1.0, -0.0937857, 0.522485, 0.847475, 1.0, 0.0851106, -0.471913, 0.877528, 1.0, 0.0851106, -0.471913, 0.877527, 1.0, 0.0851106, -0.471913, 0.877528, 1.0, 0.000849789, -0.000493603, 1.0, 1.0, 0.000849789, -0.000493603, 1.0, 1.0, 0.000849789, -0.000493602, 0.999999, 1.0, 0.551436, 0.0586961, 0.83215, 1.0, 0.551436, 0.0586961, 0.83215, 1.0, 0.551436, 0.0586961, 0.83215, 1.0, 0.798051, -0.0639486, 0.599187, 1.0, 0.798051, -0.0639486, 0.599187, 1.0, 0.798051, -0.0639486, 0.599187, 1.0, -0.00238864, -0.00169661, 0.999996, 1.0, -0.00238864, -0.00169661, 0.999996, 1.0, -0.00238864, -0.00169661, 0.999996, 1.0, 0.00398662, 0.00233487, 0.999989, 1.0, 0.00398662, 0.00233487, 0.999989, 1.0, 0.00398662, 0.00233487, 0.999989, 1.0, -0.0125985, 0.00704322, 0.999896, 1.0, -0.0125985, 0.00704322, 0.999896, 1.0, -0.0125985, 0.00704322, 0.999896, 1.0, -0.118426, 0.0, 0.992963, 1.0, -0.118426, 0.0, 0.992963, 1.0, -0.118426, 0.0, 0.992963, 1.0, 0.0765072, 0.470773, 0.878931, 1.0, 0.0765072, 0.470773, 0.878931, 1.0, 0.0765072, 0.470773, 0.878931, 1.0, -0.994728, -0.0720553, -0.0729649, 1.0, -0.994728, -0.0720553, -0.0729649, 1.0, -0.994728, -0.0720553, -0.0729649, 1.0, -0.875192, 0.0665408, 0.479179, 1.0, -0.875192, 0.0665408, 0.479179, 1.0, -0.875192, 0.0665408, 0.479179, 1.0, -0.913261, -0.070736, 0.401187, 1.0, -0.913261, -0.070736, 0.401187, 1.0, -0.913261, -0.070736, 0.401187, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -0.0855986, -0.494873, 0.864739, 1.0, -0.0855986, -0.494873, 0.864739, 1.0, -0.0855986, -0.494873, 0.864739, 1.0, 0.0904425, 0.568433, 0.817743, 1.0, -0.106702, 0.567513, 0.816421, 1.0, 0.0948012, 0.568201, 0.817411, 1.0, -0.99564, 0.0651398, -0.0667607, 1.0, -0.99564, 0.0651398, -0.0667607, 1.0, -0.99564, 0.0651398, -0.0667607, 1.0, 0.903853, 0.0823201, 0.419849, 1.0, 0.903853, 0.0823201, 0.419849, 1.0, 0.903853, 0.0823201, 0.419849, 1.0, -0.63052, -0.087948, 0.771174, 1.0, -0.63052, -0.087948, 0.771174, 1.0, -0.63052, -0.087948, 0.771174, 1.0, -0.776559, 0.0814857, 0.624752, 1.0, -0.776559, 0.0814857, 0.624752, 1.0, -0.776559, 0.0814857, 0.624752, 1.0, 0.898234, -0.0784228, 0.432464, 1.0, 0.898234, -0.0784228, 0.432464, 1.0, 0.898234, -0.0784228, 0.432464, 1.0, 0.0614146, 0.0, 0.998112, 1.0, 0.0614146, 0.0, 0.998112, 1.0, 0.0614146, 0.0, 0.998112, 1.0, 0.0140004, -0.267805, 0.963371, 1.0, 0.0140004, -0.267805, 0.963371, 1.0, 0.0140004, -0.267805, 0.963371, 1.0, 0.00207974, -0.00120802, 0.999997, 1.0, 0.00207974, -0.00120802, 0.999997, 1.0, 0.00207974, -0.00120802, 0.999997, 1.0, 0.509835, 0.0779437, 0.856734, 1.0, 0.509835, 0.0779437, 0.856734, 1.0, 0.509835, 0.0779437, 0.856734, 1.0, 0.818357, -0.0833933, 0.568628, 1.0, 0.818357, -0.0833933, 0.568628, 1.0, 0.818357, -0.0833933, 0.568628, 1.0, 6.98682e-08, 4.96262e-08, 1.0, 1.0, 6.98682e-08, 4.96262e-08, 1.0, 1.0, 6.98682e-08, 4.96262e-08, 1.0, 1.0, 0.00299974, 0.00175687, 0.999994, 1.0, 0.00299974, 0.00175687, 0.999994, 1.0, 0.00299974, 0.00175687, 0.999994, 1.0, -0.0145613, 0.00814054, 0.999861, 1.0, -0.0145613, 0.00814054, 0.999861, 1.0, -0.0145613, 0.00814054, 0.999861, 1.0, -0.0758636, -0.462979, 0.883117, 1.0, -0.0758636, -0.462979, 0.883117, 1.0, -0.0758636, -0.462979, 0.883117, 1.0, 0.0799381, 0.543839, 0.835373, 1.0, 0.0799381, 0.543839, 0.835373, 1.0, 0.0799381, 0.543839, 0.835373, 1.0, 0.991162, -0.0932094, -0.0943869, 1.0, 0.991163, -0.0932094, -0.094387, 1.0, 0.991162, -0.0932094, -0.0943869, 1.0, -0.841156, 0.0837945, 0.534261, 1.0, -0.841156, 0.0837945, 0.534261, 1.0, -0.841156, 0.0837945, 0.534262, 1.0, -0.910778, -0.0856326, 0.40392, 1.0, -0.910777, -0.0856326, 0.40392, 1.0, -0.910777, -0.0856326, 0.40392, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0983909, -0.494286, 0.863713, 1.0, 0.0983909, -0.494286, 0.863713, 1.0, 0.0983909, -0.494286, 0.863713, 1.0, -0.111053, 0.567241, 0.81603, 1.0, 0.990004, 0.0984953, -0.100947, 1.0, 0.990004, 0.0984953, -0.100947, 1.0, 0.990004, 0.0984953, -0.100947, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.971333, 0.0551105, 0.818941, 0.167805, 0.839185, 0.181443, 0.0683214, 0.0177919, 0.221463, 0.15686, 0.236455, 0.147253, 0.923077, 0.985732, 0.803136, 0.830487, 0.785001, 0.841114, 0.0202672, 0.947675, 0.190714, 0.825447, 0.172202, 0.811444, 0.0610806, 0.975363, 0.101716, 1.00274, 0.106654, 0.971874, 0.883642, 0.970235, 0.921326, 0.992196, 0.938881, 0.973788, 0.0735208, 0.979777, 0.785001, 0.841114, 0.213247, 0.838614, 0.946488, 0.0404543, 0.799422, 0.158358, 0.818941, 0.167805, 0.0445062, 0.962597, 0.213247, 0.838614, 0.190714, 0.825447, 0.106654, 0.971874, 0.887859, 1.00274, 0.883642, 0.970235, 0.9195, 0.025549, 0.236455, 0.147253, 0.799422, 0.158358, 0.102, 0.00951326, 0.891475, 0.0388109, 0.895486, 0.00175619, 0.895486, 0.00175619, 0.94429, 0.0357013, 0.918254, 0.0149434, 0.0776767, 0.0265377, 0.107874, 0.0481627, 0.102, 0.00951326, 0.0311311, 0.04501, 0.172202, 0.811444, 0.207785, 0.169196, 0.943837, 0.971077, 0.822595, 0.81374, 0.803136, 0.830487, 0.0509117, 0.0303117, 0.207785, 0.169196, 0.221463, 0.15686, 0.0529649, 0.0490069, 0.945846, 0.950993, 0.945846, 0.0490069, 0.891475, 0.0388109, 0.938881, 0.973788, 0.94429, 0.0357013, 0.0599101, 0.0452092, 0.106654, 0.971874, 0.107874, 0.0481627, 0.971333, 0.950942, 0.839185, 0.181443, 0.822595, 0.81374, 0.971333, 0.0551105, 0.946488, 0.0404543, 0.818941, 0.167805, 0.0683214, 0.0177919, 0.0509117, 0.0303117, 0.221463, 0.15686, 0.923077, 0.985732, 0.943837, 0.971077, 0.803136, 0.830487, 0.0202672, 0.947675, 0.0445062, 0.962597, 0.190714, 0.825447, 0.0610806, 0.975363, 0.0782492, 0.993066, 0.101716, 1.00274, 0.883642, 0.970235, 0.887859, 1.00274, 0.921326, 0.992196, 0.0735208, 0.979777, 0.923077, 0.985732, 0.785001, 0.841114, 0.946488, 0.0404543, 0.9195, 0.025549, 0.799422, 0.158358, 0.0445062, 0.962597, 0.0735208, 0.979777, 0.213247, 0.838614, 0.106654, 0.971874, 0.101716, 1.00274, 0.887859, 1.00274, 0.9195, 0.025549, 0.0683214, 0.0177919, 0.236455, 0.147253, 0.102, 0.00951326, 0.107874, 0.0481627, 0.891475, 0.0388109, 0.895486, 0.00175619, 0.891475, 0.0388109, 0.94429, 0.0357013, 0.0776767, 0.0265377, 0.0599101, 0.0452092, 0.107874, 0.0481627, 0.0311311, 0.04501, 0.0202672, 0.947675, 0.172202, 0.811444, 0.943837, 0.971077, 0.971333, 0.950942, 0.822595, 0.81374, 0.0509117, 0.0303117, 0.0311311, 0.04501, 0.207785, 0.169196, 0.0529647, 0.950993, 0.891475, 0.0388109, 0.883642, 0.970235, 0.938881, 0.973788, 0.0610806, 0.975363, 0.971333, 0.950942, 0.971333, 0.0551105, 0.839185, 0.181443),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 98, 97, 99, 101, 100, 102, 104, 103, 105, 107, 106, 108, 110, 109, 111, 113, 112, 51, 52, 114, 115, 117, 116, 57, 58, 118, 119, 121, 120)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(1.1013, -1.00323, 0.94775, 0.986063, -1.00323, 1.06032, 0.986063, -1.00323, 0.94775, 1.1013, -1.00323, -0.966846, 0.986063, -1.00323, 0.94775, 0.986063, -1.00323, -0.966846, 1.04593, -1.00323, -1.01983, 0.986063, -1.00323, -1.05952, -2.3756, -1.00323, -0.966846, -2.3756, -1.00323, -1.05952, -2.3756, -1.00323, 0.94775, 0.986063, -1.00323, 0.94775, -2.3756, -1.00323, 1.06032, -2.3756, -1.00323, 0.94775, -2.43575, -1.00323, 0.998602, -2.4663, -1.00323, 0.94775, -2.4663, -1.00323, -0.966846, -2.43345, -1.00323, -1.02622, 0.976735, -0.216906, 1.05437, -2.3756, -1.00323, 1.06032, 0.986063, -1.00323, 1.06032, -2.42452, -0.216906, -1.01903, -2.3756, -1.00323, -1.05952, -2.43345, -1.00323, -1.02622, 1.04889, -0.216906, 1.00179, 0.986063, -1.00323, 1.06032, 1.06009, -1.00323, 1.01143, -2.36629, -0.216906, -1.05372, 0.986063, -1.00323, -1.05952, -2.3756, -1.00323, -1.05952, -2.45649, -0.216906, 0.942423, -2.4663, -1.00323, -0.966846, -2.4663, -1.00323, 0.94775, 1.03627, -0.216906, -1.01424, 1.1013, -1.00323, -0.966846, 1.04593, -1.00323, -1.01983, -2.42612, -0.216906, 1.0009, -2.4663, -1.00323, 0.94775, -2.43575, -1.00323, 0.998602, 1.09133, -0.216906, -0.961556, 1.1013, -1.00323, 0.94775, 1.1013, -1.00323, -0.966846, 0.976735, -0.216906, -1.05372, 1.04593, -1.00323, -1.01983, 0.986063, -1.00323, -1.05952, 1.09133, -0.216906, 0.942423, 1.06009, -1.00323, 1.01143, 1.1013, -1.00323, 0.94775, -2.45649, -0.216906, -0.961556, -2.43345, -1.00323, -1.02622, -2.4663, -1.00323, -0.966846, -2.36629, -0.216906, 1.05437, -2.43575, -1.00323, 0.998602, -2.3756, -1.00323, 1.06032, 1.06009, -1.00323, 1.01143, 1.1013, -1.00323, -0.966846, 1.1013, -1.00323, 0.94775, 0.986063, -1.00323, 0.94775, 0.986063, -1.00323, 1.06032, -2.3756, -1.00323, 1.06032, 0.976735, -0.216906, 1.05437, -2.36629, -0.216906, 1.05437, -2.3756, -1.00323, 1.06032, -2.42452, -0.216906, -1.01903, -2.36629, -0.216906, -1.05372, -2.3756, -1.00323, -1.05952, 1.04889, -0.216906, 1.00179, 0.976735, -0.216906, 1.05437, 0.986063, -1.00323, 1.06032, -2.36629, -0.216906, -1.05372, 0.976735, -0.216906, -1.05372, 0.986063, -1.00323, -1.05952, -2.45649, -0.216906, 0.942423, -2.45649, -0.216906, -0.961556, -2.4663, -1.00323, -0.966846, 1.03627, -0.216906, -1.01424, 1.09133, -0.216906, -0.961556, 1.1013, -1.00323, -0.966846, -2.42612, -0.216906, 1.0009, -2.45649, -0.216906, 0.942423, -2.4663, -1.00323, 0.94775, 1.09133, -0.216906, -0.961556, 1.09133, -0.216906, 0.942423, 1.1013, -1.00323, 0.94775, 0.976735, -0.216906, -1.05372, 1.03627, -0.216906, -1.01424, 1.04593, -1.00323, -1.01983, 1.09133, -0.216906, 0.942423, 1.04889, -0.216906, 1.00179, 1.06009, -1.00323, 1.01143, -2.45649, -0.216906, -0.961556, -2.42452, -0.216906, -1.01903, -2.43345, -1.00323, -1.02622, -2.36629, -0.216906, 1.05437, -2.42612, -0.216906, 1.0009, -2.43575, -1.00323, 0.998602),
		Vector3Array(0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.00756884, 0.999971, 0.0, 0.00756884, 0.999971, 0.0, 0.00756884, 0.999971, -0.498903, 0.0135913, -0.866551, -0.498903, 0.0135913, -0.866551, -0.498903, 0.0135913, -0.866551, 0.551011, 0.0180792, 0.834302, 0.551011, 0.0180792, 0.834302, 0.551011, 0.0180792, 0.834302, 0.0, 0.00738053, -0.999973, 0.0, 0.00738053, -0.999973, 0.0, 0.00738053, -0.999973, -0.999922, 0.0124836, 0.0, -0.999922, 0.0124836, 0.0, -0.999922, 0.0124836, 0.0, 0.691269, 0.0136221, -0.722469, 0.691269, 0.0136221, -0.722469, 0.691269, 0.0136221, -0.722469, -0.857116, 0.00899127, 0.515045, -0.857116, 0.00899127, 0.515045, -0.857116, 0.00899127, 0.515045, 0.99992, 0.012674, 0.0, 0.99992, 0.012674, 0.0, 0.99992, 0.012674, 0.0, 0.552616, 0.0127056, -0.833339, 0.552616, 0.0127056, -0.833339, 0.552616, 0.0127056, -0.833339, 0.839468, 0.0143207, 0.54322, 0.839468, 0.0143207, 0.54322, 0.839468, 0.0143207, 0.54322, -0.874904, 0.0141793, -0.484088, -0.874904, 0.0141793, -0.484088, -0.874904, 0.0141793, -0.484088, -0.71613, 0.0137648, 0.697831, -0.71613, 0.0137648, 0.697831, -0.71613, 0.0137648, 0.697831, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.00756873, 0.999971, 0.0, 0.00756873, 0.999971, 0.0, 0.00756873, 0.999971, -0.511785, 0.0124023, -0.859024, -0.511785, 0.0124023, -0.859024, -0.511785, 0.0124023, -0.859024, 0.588894, 0.0131022, 0.808105, 0.588894, 0.0131022, 0.808105, 0.588894, 0.0131022, 0.808105, 0.0, 0.00738038, -0.999973, 0.0, 0.00738038, -0.999973, 0.0, 0.00738038, -0.999973, -0.999922, 0.0124836, 0.0, -0.999922, 0.0124836, 0.0, -0.999922, 0.0124836, 0.0, 0.691269, 0.0136218, -0.722469, 0.691269, 0.0136218, -0.722469, 0.691269, 0.0136218, -0.722469, -0.887364, 0.0142007, 0.460851, -0.887364, 0.0142007, 0.460851, -0.887364, 0.0142007, 0.460851, 0.99992, 0.012674, 0.0, 0.99992, 0.012674, 0.0, 0.99992, 0.012674, 0.0, 0.552616, 0.0127059, -0.833339, 0.552616, 0.0127059, -0.833339, 0.552616, 0.0127059, -0.833339, 0.813356, 0.0187146, 0.581465, 0.813356, 0.0187146, 0.581465, 0.813356, 0.0187146, 0.581465, -0.873816, 0.0143721, -0.486044, -0.873816, 0.0143721, -0.486044, -0.873816, 0.0143721, -0.486044, -0.666368, 0.00598081, 0.745599, -0.666368, 0.00598081, 0.745599, -0.666368, 0.00598081, 0.745599),
		FloatArray(-6.41502e-06, 0.0, 1.0, 1.0, -6.12207e-06, 0.0, 1.0, 1.0, -4.30551e-06, 0.0, 1.0, 1.0, -9.32289e-07, 0.0, 1.0, 1.0, 1.6716e-07, 0.0, 1.0, 1.0, 1.70405e-07, 0.0, 1.0, 1.0, -1.73334e-06, 0.0, 1.0, 1.0, 1.47722e-07, 0.0, 1.0, 1.0, 9.33338e-06, 0.0, 1.0, 1.0, 1.10918e-05, 0.0, 1.0, 1.0, 8.34087e-06, 0.0, 1.0, 1.0, -3.93415e-06, 0.0, 1.0, 1.0, 1.09473e-05, 0.0, 1.0, 1.0, 1.12785e-05, 0.0, 1.0, 1.0, 1.60211e-05, 0.0, 1.0, 1.0, 1.16476e-05, 0.0, 1.0, 1.0, 5.64475e-06, 0.0, 1.0, 1.0, -1.15748e-05, 0.0, 1.0, 1.0, -0.500374, 0.865785, -0.00655318, 1.0, -0.500374, 0.865785, -0.00655318, 1.0, -0.500374, 0.865785, -0.00655318, 1.0, -0.37632, -0.904093, 0.20248, 1.0, -0.37632, -0.904093, 0.20248, 1.0, -0.37632, -0.904093, 0.20248, 1.0, -0.391551, 0.888483, 0.239345, 1.0, -0.391551, 0.888483, 0.239345, 1.0, -0.391551, 0.888483, 0.239345, 1.0, -0.45631, -0.889797, -0.00656735, 1.0, -0.45631, -0.889797, -0.00656735, 1.0, -0.45631, -0.889797, -0.00656735, 1.0, 0.00100785, 0.0807277, 0.996736, 1.0, 0.00100785, 0.0807277, 0.996736, 1.0, 0.00100785, 0.0807277, 0.996736, 1.0, 0.372363, -0.863566, 0.34, 1.0, 0.372363, -0.863566, 0.34, 1.0, 0.372363, -0.863566, 0.34, 1.0, 0.30085, 0.820343, 0.486341, 1.0, 0.30085, 0.820343, 0.486341, 1.0, 0.30085, 0.820343, 0.486341, 1.0, 6.20479e-05, -0.00489529, 0.999988, 1.0, 6.20479e-05, -0.00489529, 0.999988, 1.0, 6.20479e-05, -0.00489529, 0.999988, 1.0, 0.3499, -0.911035, 0.21814, 1.0, 0.3499, -0.911035, 0.21814, 1.0, 0.3499, -0.911035, 0.21814, 1.0, -0.344693, 0.786839, 0.511929, 1.0, -0.344693, 0.786839, 0.511929, 1.0, -0.344693, 0.786839, 0.51193, 1.0, -0.278048, -0.83312, 0.478121, 1.0, -0.278048, -0.83312, 0.478121, 1.0, -0.278048, -0.83312, 0.478121, 1.0, 0.328452, 0.88883, 0.319532, 1.0, 0.328452, 0.88883, 0.319532, 1.0, 0.328452, 0.88883, 0.319532, 1.0, -1.37421e-05, 0.0, 1.0, 1.0, 1.67195e-07, 0.0, 1.0, 1.0, 1.67195e-07, 0.0, 1.0, 1.0, 1.67195e-07, 0.0, 1.0, 1.0, -4.2654e-06, 0.0, 1.0, 1.0, 1.13742e-05, 0.0, 1.0, 1.0, 0.391199, 0.92028, -0.00696555, 1.0, 0.391199, 0.92028, -0.00696555, 1.0, 0.391199, 0.92028, -0.00696555, 1.0, -0.344214, -0.919091, 0.191805, 1.0, -0.344214, -0.919091, 0.191805, 1.0, -0.344214, -0.919091, 0.191805, 1.0, -0.343327, 0.909224, 0.235453, 1.0, -0.343327, 0.909224, 0.235453, 1.0, -0.343327, 0.909224, 0.235453, 1.0, 0.410797, -0.911702, -0.00672889, 1.0, 0.410797, -0.911702, -0.00672889, 1.0, 0.410797, -0.911702, -0.0067289, 1.0, 0.000906322, 0.0725951, 0.997361, 1.0, 0.000906322, 0.0725951, 0.997361, 1.0, 0.000906322, 0.0725951, 0.997361, 1.0, 0.33662, -0.890778, 0.305288, 1.0, 0.33662, -0.890778, 0.305288, 1.0, 0.33662, -0.890778, 0.305288, 1.0, 0.240022, 0.867637, 0.435425, 1.0, 0.240022, 0.867637, 0.435426, 1.0, 0.240022, 0.867637, 0.435425, 1.0, 0.000185941, -0.0146699, 0.999892, 1.0, 0.000185941, -0.0146699, 0.999892, 1.0, 0.000185941, -0.0146699, 0.999892, 1.0, 0.34152, -0.915534, 0.212514, 1.0, 0.34152, -0.915534, 0.212514, 1.0, 0.34152, -0.915534, 0.212514, 1.0, -0.310638, 0.859045, 0.406873, 1.0, -0.310638, 0.859045, 0.406873, 1.0, -0.310638, 0.859045, 0.406873, 1.0, -0.239864, -0.882227, 0.405144, 1.0, -0.239864, -0.882227, 0.405144, 1.0, -0.239864, -0.882226, 0.405144, 1.0, 0.323313, 0.903387, 0.281709, 1.0, 0.323313, 0.903387, 0.281709, 1.0, 0.323313, 0.903387, 0.281709, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.897828, 0.998172, 0.945101, 0.965987, 0.897828, 0.965987, 0.0938251, 0.998172, 0.897828, 0.965987, 0.0938254, 0.965987, 0.0715774, 0.982707, 0.0549068, 0.965987, 0.0938183, 0.0270735, 0.0548978, 0.0270739, 0.897829, 0.0270705, 0.897828, 0.965987, 0.945102, 0.0270702, 0.897829, 0.0270705, 0.919184, 0.0102722, 0.897829, 0.00173771, 0.0938179, 0.0017401, 0.0688846, 0.0109158, 0.822595, 0.81374, 0.774897, 0.242902, 0.750236, 0.746993, 0.221463, 0.15686, 0.293725, 0.22961, 0.304433, 0.218424, 0.803136, 0.830487, 0.750236, 0.746993, 0.734688, 0.762092, 0.207785, 0.169196, 0.246117, 0.745169, 0.293725, 0.22961, 0.799422, 0.158358, 0.318249, 0.210233, 0.741006, 0.222968, 0.190714, 0.825447, 0.281221, 0.769941, 0.261842, 0.758725, 0.818941, 0.167805, 0.741006, 0.222968, 0.75689, 0.22976, 0.213247, 0.838614, 0.717828, 0.770759, 0.281221, 0.769941, 0.172202, 0.811444, 0.261842, 0.758725, 0.246117, 0.745169, 0.785001, 0.841114, 0.734688, 0.762092, 0.717828, 0.770759, 0.236455, 0.147253, 0.304433, 0.218424, 0.318249, 0.210233, 0.839185, 0.181443, 0.75689, 0.22976, 0.774897, 0.242902, 0.924569, 0.986663, 0.0938251, 0.998172, 0.897828, 0.998172, 0.897828, 0.965987, 0.945101, 0.965987, 0.945102, 0.0270702, 0.822595, 0.81374, 0.839185, 0.181443, 0.774897, 0.242902, 0.221463, 0.15686, 0.207785, 0.169196, 0.293725, 0.22961, 0.803136, 0.830487, 0.822595, 0.81374, 0.750236, 0.746993, 0.207785, 0.169196, 0.172202, 0.811444, 0.246117, 0.745169, 0.799422, 0.158358, 0.236455, 0.147253, 0.318249, 0.210233, 0.190714, 0.825447, 0.213247, 0.838614, 0.281221, 0.769941, 0.818941, 0.167805, 0.799422, 0.158358, 0.741006, 0.222968, 0.213247, 0.838614, 0.785001, 0.841114, 0.717828, 0.770759, 0.172202, 0.811444, 0.190714, 0.825447, 0.261842, 0.758725, 0.785001, 0.841114, 0.803136, 0.830487, 0.734688, 0.762092, 0.236455, 0.147253, 0.221463, 0.15686, 0.304433, 0.218424, 0.839185, 0.181443, 0.818941, 0.167805, 0.75689, 0.22976),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 7, 5, 7, 9, 8, 5, 8, 10, 11, 13, 12, 10, 15, 14, 8, 16, 15, 9, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 0, 1, 54, 55, 57, 56, 6, 5, 3, 7, 8, 5, 5, 10, 4, 11, 12, 58, 10, 14, 59, 8, 15, 10, 9, 16, 8, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 95, 94)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Tile" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
